{
    "className": "org.joget.apps.form.model.Form",
    "elements": [
        {
            "className": "org.joget.apps.form.model.Section",
            "elements": [
                {
                    "className": "org.joget.apps.form.model.Column",
                    "elements": [
                        {
                            "className": "org.joget.apps.form.lib.HiddenField",
                            "properties": {
                                "id": "id",
                                "useDefaultWhenEmpty": "",
                                "validator": {
                                    "className": "",
                                    "properties": {}
                                },
                                "value": "",
                                "workflowVariable": ""
                            }
                        },
                        {
                            "className": "org.joget.apps.form.lib.HiddenField",
                            "properties": {
                                "id": "serReqDmccSrNo",
                                "useDefaultWhenEmpty": "",
                                "validator": {
                                    "className": "",
                                    "properties": {}
                                },
                                "value": "#requestParam.KEY#",
                                "workflowVariable": ""
                            }
                        },
                        {
                            "className": "org.joget.apps.form.lib.TextField",
                            "properties": {
                                "encryption": "",
                                "id": "sampid",
                                "label": "id",
                                "maxlength": "",
                                "placeholder": "",
                                "readonly": "",
                                "readonlyLabel": "",
                                "size": "",
                                "storeNumeric": "",
                                "style": "",
                                "validator": {
                                    "className": "",
                                    "properties": {}
                                },
                                "value": "#requestParam.id#",
                                "workflowVariable": ""
                            }
                        },
                        {
                            "className": "org.joget.apps.form.lib.TextField",
                            "properties": {
                                "encryption": "",
                                "id": "currentuser",
                                "label": "Reported By",
                                "maxlength": "",
                                "permissionHidden": "",
                                "placeholder": "",
                                "readonly": "true",
                                "readonlyLabel": "true",
                                "size": "",
                                "storeNumeric": "",
                                "style": "",
                                "validator": {
                                    "className": "",
                                    "properties": {}
                                },
                                "value": "#currentUser.fullName#",
                                "workflowVariable": ""
                            }
                        }
                    ],
                    "properties": {"width": "49%"}
                },
                {
                    "className": "org.joget.apps.form.model.Column",
                    "elements": [
                        {
                            "className": "org.joget.apps.form.lib.TextField",
                            "properties": {
                                "encryption": "",
                                "id": "dmccvalue",
                                "label": "DMCC SR No.",
                                "maxlength": "",
                                "permissionHidden": "",
                                "placeholder": "",
                                "readonly": "true",
                                "readonlyLabel": "true",
                                "size": "",
                                "storeNumeric": "",
                                "style": "",
                                "validator": {
                                    "className": "",
                                    "properties": {}
                                },
                                "value": "#requestParam.serReqDmccSrNo#",
                                "workflowVariable": ""
                            }
                        },
                        {
                            "className": "org.joget.apps.form.lib.TextField",
                            "properties": {
                                "encryption": "",
                                "id": "reportdate",
                                "label": "Reported On:",
                                "maxlength": "",
                                "permissionHidden": "",
                                "placeholder": "",
                                "readonly": "true",
                                "readonlyLabel": "true",
                                "size": "",
                                "storeNumeric": "",
                                "style": "",
                                "validator": {
                                    "className": "",
                                    "properties": {}
                                },
                                "value": "#requestParam.reportdate#",
                                "workflowVariable": ""
                            }
                        }
                    ],
                    "properties": {"width": "49%"}
                }
            ],
            "properties": {
                "comment": "",
                "id": "inspectionReport",
                "join": "",
                "label": "Inspection Report - Non Compliance",
                "loadBinder": {
                    "className": "",
                    "properties": {}
                },
                "permission": {
                    "className": "",
                    "properties": {}
                },
                "permissionHidden": "",
                "permissionReadonly": "",
                "readonly": "true",
                "readonlyLabel": "true",
                "regex": "",
                "reverse": "",
                "storeBinder": {
                    "className": "",
                    "properties": {}
                },
                "visibilityControl": "",
                "visibilityValue": ""
            }
        },
        {
            "className": "org.joget.apps.form.model.Section",
            "elements": [{
                "className": "org.joget.apps.form.model.Column",
                "elements": [],
                "properties": {"width": "100%"}
            }],
            "properties": {
                "comment": "",
                "id": "noncompliancesection",
                "join": "",
                "label": "Non-Compliance Details",
                "loadBinder": {
                    "className": "",
                    "properties": {}
                },
                "permission": {
                    "className": "",
                    "properties": {}
                },
                "permissionHidden": "",
                "permissionReadonly": "",
                "readonly": "true",
                "readonlyLabel": "true",
                "regex": "",
                "reverse": "",
                "storeBinder": {
                    "className": "",
                    "properties": {}
                },
                "visibilityControl": "",
                "visibilityValue": ""
            }
        },
        {
            "className": "org.joget.apps.form.model.Section",
            "elements": [{
                "className": "org.joget.apps.form.model.Column",
                "elements": [
                    {
                        "className": "org.joget.apps.form.lib.SelectBox",
                        "properties": {
                            "controlField": "",
                            "id": "reasonnoncompliance",
                            "label": "Reason for Non-Compliance",
                            "multiple": "",
                            "options": [
                                {
                                    "grouping": "",
                                    "label": "Select",
                                    "value": "Select"
                                },
                                {
                                    "grouping": "",
                                    "label": "Customer Absent",
                                    "value": "Customer Absent"
                                },
                                {
                                    "grouping": "",
                                    "label": "Closed Premises",
                                    "value": "Closed Premises"
                                },
                                {
                                    "grouping": "",
                                    "label": "Others",
                                    "value": "Others"
                                }
                            ],
                            "optionsBinder": {
                                "className": "",
                                "properties": {}
                            },
                            "readonly": "",
                            "readonlyLabel": "",
                            "size": "",
                            "validator": {
                                "className": "org.joget.apps.form.lib.DefaultValidator",
                                "properties": {
                                    "mandatory": "true",
                                    "message": "Mandatory",
                                    "type": ""
                                }
                            },
                            "value": "",
                            "workflowVariable": ""
                        }
                    },
                    {
                        "className": "org.joget.apps.form.lib.TextField",
                        "properties": {
                            "encryption": "",
                            "id": "remarkfield",
                            "label": "Remarks",
                            "maxlength": "",
                            "placeholder": "",
                            "readonly": "",
                            "readonlyLabel": "",
                            "size": "",
                            "storeNumeric": "",
                            "style": "",
                            "validator": {
                                "className": "",
                                "properties": {}
                            },
                            "value": "",
                            "workflowVariable": ""
                        }
                    },
                    {
                        "className": "org.joget.plugin.enterprise.ImageUpload",
                        "properties": {
                            "createThumbnail": "true",
                            "fileType": ".jpeg;.jpg;.gif;.png",
                            "fileTypeMsg": "Invalid file type",
                            "height": "60",
                            "id": "imageupload",
                            "label": "Image(s) for reference",
                            "maxSize": "",
                            "maxSizeMsg": "File size limit exceeded",
                            "multiple": "",
                            "padding": "",
                            "permissionType": "",
                            "readonly": "",
                            "removeFile": "",
                            "resizeHeight": "",
                            "resizeMethod": "",
                            "resizeQuality": "0.8",
                            "resizeWidth": "",
                            "validator": {
                                "className": "",
                                "properties": {}
                            },
                            "width": "60"
                        }
                    }
                ],
                "properties": {"width": "100%"}
            }],
            "properties": {
                "comment": "",
                "id": "othernoncompliance",
                "join": "",
                "label": "",
                "loadBinder": {
                    "className": "org.joget.apps.form.lib.WorkflowFormBinder",
                    "properties": {}
                },
                "permission": {
                    "className": "",
                    "properties": {}
                },
                "permissionHidden": "",
                "permissionReadonly": "",
                "readonly": "true",
                "readonlyLabel": "",
                "regex": "",
                "reverse": "",
                "storeBinder": {
                    "className": "org.joget.apps.form.lib.WorkflowFormBinder",
                    "properties": {}
                },
                "visibilityControl": "#requestParam.status#",
                "visibilityValue": "Other Non-Compliance"
            }
        },
        {
            "className": "org.joget.apps.form.model.Section",
            "elements": [{
                "className": "org.joget.apps.form.model.Column",
                "elements": [
                    {
                        "className": "org.joget.apps.form.lib.TextArea",
                        "properties": {
                            "cols": "75",
                            "id": "reason_waiveroff",
                            "label": "Reason Provided",
                            "permissionHidden": "",
                            "placeholder": "",
                            "readonly": "true",
                            "readonlyLabel": "true",
                            "rows": "5",
                            "validator": {
                                "className": "",
                                "properties": {}
                            },
                            "value": "",
                            "workflowVariable": ""
                        }
                    },
                    {
                        "className": "org.joget.apps.form.lib.SelectBox",
                        "properties": {
                            "controlField": "",
                            "id": "waiver_category",
                            "label": "For the reason falls under:",
                            "multiple": "",
                            "options": [
                                {
                                    "grouping": "",
                                    "label": "category1",
                                    "value": "category1"
                                },
                                {
                                    "grouping": "",
                                    "label": "category2",
                                    "value": "category2"
                                },
                                {
                                    "grouping": "",
                                    "label": "category3",
                                    "value": "category3"
                                }
                            ],
                            "optionsBinder": {
                                "className": "",
                                "properties": {}
                            },
                            "readonly": "",
                            "readonlyLabel": "",
                            "size": "",
                            "validator": {
                                "className": "",
                                "properties": {}
                            },
                            "value": "",
                            "workflowVariable": ""
                        }
                    },
                    {
                        "className": "org.joget.apps.form.lib.TextField",
                        "properties": {
                            "encryption": "",
                            "id": "fee_fitout_nonCompliance",
                            "label": "Non-Compliance Fee",
                            "maxlength": "",
                            "numOfDecimal": "2",
                            "placeholder": "",
                            "postfix": "",
                            "prefix": "",
                            "readonly": "",
                            "readonlyLabel": "",
                            "size": "",
                            "storeNumeric": "true",
                            "style": "us",
                            "useThousandSeparator": "",
                            "validator": {
                                "className": "org.joget.apps.form.lib.DefaultValidator",
                                "properties": {
                                    "mandatory": "true",
                                    "message": "Mandatory",
                                    "type": ""
                                }
                            },
                            "value": "",
                            "workflowVariable": ""
                        }
                    },
                    {
                        "className": "org.joget.apps.form.lib.TextField",
                        "properties": {
                            "encryption": "",
                            "id": "waive_off",
                            "label": "Waive off (60% or 40% or 20%)",
                            "maxlength": "",
                            "placeholder": "",
                            "readonly": "",
                            "readonlyLabel": "",
                            "size": "",
                            "storeNumeric": "",
                            "style": "",
                            "validator": {
                                "className": "org.joget.apps.form.lib.DefaultValidator",
                                "properties": {
                                    "mandatory": "true",
                                    "message": "Mandatory",
                                    "type": ""
                                }
                            },
                            "value": "",
                            "workflowVariable": ""
                        }
                    },
                    {
                        "className": "org.joget.plugin.enterprise.CalculationField",
                        "properties": {
                            "equation": "(totalfee/100)*wave",
                            "hidden": "",
                            "id": "waver_amount",
                            "label": "Waiver_amount",
                            "numOfDecimal": "2",
                            "postfix": "",
                            "prefix": "",
                            "readonlyLabel": "true",
                            "storeNumeric": "true",
                            "style": "us",
                            "useThousandSeparator": "",
                            "validator": {
                                "className": "",
                                "properties": {}
                            },
                            "variables": [
                                {
                                    "fieldId": "fee_fitout_nonCompliance",
                                    "operation": "sum",
                                    "variableName": "totalfee"
                                },
                                {
                                    "fieldId": "waive_off",
                                    "operation": "sum",
                                    "variableName": "wave"
                                }
                            ],
                            "workflowVariable": ""
                        }
                    },
                    {
                        "className": "org.joget.plugin.enterprise.CalculationField",
                        "properties": {
                            "equation": "(totalfee-waver)",
                            "hidden": "",
                            "id": "feetopay",
                            "label": "Fee To-Be Paid",
                            "numOfDecimal": "2",
                            "postfix": "",
                            "prefix": "",
                            "readonlyLabel": "true",
                            "storeNumeric": "true",
                            "style": "us",
                            "useThousandSeparator": "",
                            "validator": {
                                "className": "",
                                "properties": {}
                            },
                            "variables": [
                                {
                                    "fieldId": "fee_fitout_nonCompliance",
                                    "operation": "sum",
                                    "variableName": "totalfee"
                                },
                                {
                                    "fieldId": "waver_amount",
                                    "operation": "sum",
                                    "variableName": "waver"
                                }
                            ],
                            "workflowVariable": ""
                        }
                    },
                    {
                        "className": "org.joget.apps.form.lib.HiddenField",
                        "properties": {
                            "id": "waiverstate",
                            "useDefaultWhenEmpty": "",
                            "validator": {
                                "className": "",
                                "properties": {}
                            },
                            "value": "WaiverApplied",
                            "workflowVariable": ""
                        }
                    }
                ],
                "properties": {"width": "100%"}
            }],
            "properties": {
                "comment": "",
                "id": "fee",
                "join": "or;or",
                "label": "Waiver Off",
                "loadBinder": {
                    "className": "org.joget.apps.form.lib.WorkflowFormBinder",
                    "properties": {}
                },
                "permission": {
                    "className": "",
                    "properties": {}
                },
                "permissionHidden": "",
                "permissionReadonly": "",
                "readonly": "true",
                "readonlyLabel": "true",
                "regex": ";",
                "reverse": ";",
                "storeBinder": {
                    "className": "org.joget.apps.form.lib.WorkflowFormBinder",
                    "properties": {}
                },
                "visibilityControl": "inspectionreportStatus;inspectionreportStatus",
                "visibilityValue": "Other Non-Compliance;Fitout Non-Compliance"
            }
        },
        {
            "className": "org.joget.apps.form.model.Section",
            "elements": [{
                "className": "org.joget.apps.form.model.Column",
                "elements": [],
                "properties": {"width": "100%"}
            }],
            "properties": {
                "id": "section5",
                "label": "Section"
            }
        }
    ],
    "properties": {
        "description": "",
        "id": "insp_waive_view",
        "loadBinder": {
            "className": "org.joget.apps.form.lib.WorkflowFormBinder",
            "properties": {}
        },
        "name": "Inspection Report - Waive OFF View",
        "noPermissionMessage": "",
        "permission": {
            "className": "",
            "properties": {}
        },
        "postProcessor": {
            "className": "",
            "properties": {}
        },
        "postProcessorRunOn": "both",
        "storeBinder": {
            "className": "org.joget.apps.form.lib.BeanShellFormBinder",
            "properties": {
                "autoHandleFiles": "",
                "autoHandleWorkflowVariable": "true",
                "cacheInterval": "",
                "script": "import org.apache.http.HttpResponse;\r\nimport org.apache.http.client.HttpClient;\r\nimport org.apache.http.client.methods.HttpPost;\r\nimport org.apache.http.entity.StringEntity;\r\nimport org.apache.http.impl.client.HttpClients;\r\nimport org.apache.http.util.EntityUtils;\r\nimport java.lang.String;\r\nimport org.apache.http.client.config.CookieSpecs;\r\nimport org.apache.http.client.config.RequestConfig;\r\nimport org.json.JSONObject;\r\nimport java.sql.*;\r\nimport java.util.*;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\n\r\n\t// Here we are saving the order details in db\r\n\tpublic  setOrderDetailsInDB(String orderReference, String merchantOrderReference, String access_token) {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tClass.forName(\"com.mysql.jdbc.Driver\").newInstance();\r\n\t\t\tConnection con = DriverManager.getConnection(\"jdbc:mysql://localhost:3307/jwdb?characterEncoding=UTF-8\",\r\n\t\t\t\t\t\"root\", \"\");\r\n\t\t\tif (!con.isClosed()) {\r\n\r\n\t\t\t\tString id = \"#form.ofc_serReqs_tab.id#\";\r\n\t\t\t\t// create the java mysql update PreparedStatement\r\n\t\t\t\tString query = \"update app_fd_ofc_serreqs_tab set c_merchantOrderReference = ?, c_orderReference = ?, c_bearer_access_token = ?  where id = ?\";\r\n\r\n\t\t\t\tPreparedStatement preparedStmt = con.prepareStatement(query);\r\n\t\t\t\tpreparedStmt.setString(1, merchantOrderReference);\r\n\t\t\t\tpreparedStmt.setString(2, orderReference);\r\n\t\t\t\tpreparedStmt.setString(3, \"Bearer \" + access_token);\r\n\t\t\t\tpreparedStmt.setString(4, id);\r\n\r\n\t\t\t\t// execute the java PreparedStatement\r\n\t\t\t\tpreparedStmt.executeUpdate();\r\n\r\n\t\t\t\tcon.close();\r\n\t\t\t} else {\r\n\t\t\t\t//////System.out.println(\"Connection Problem\");\r\n\t\t\t}\r\n\t\t} catch (Exception ex) {\r\n\r\n\t\t\tex.printStackTrace();\r\n\t\t}\r\n\r\n\t}\r\npublic createOrder(String accessToken) {\r\n\r\n\t\t// getting amount for payment request form Ajax sub form in process workflow\r\n\t\t// (Service Request View)\r\n\t\tString amountStr = \"#form.ofc_ofc_category_tab.serReqTotAmt[{form.ofc_serReqs_tab.ofc_category_name}]#\";\r\n\t\tString companyNameUsername = \"#form.ofc_company_tab.companyName[{form.ofc_serReqs_tab.companyName}]#\";\r\n\t\tString companyNamOrEmail = \"#form.ofc_serReqs_tab.serReqUserName#\";\r\n\r\n\t\tString finalAmount = \"\";\r\n\t\tint totalAmount = 0;\r\n\r\n\t\t// here we are removing decimal points because create order payload only support\r\n\t\t// non-decimal amount\r\n\t\tif (!amountStr.equals(\"0.00\")) {\r\n\t\t\tString amountInDecimalString = amountStr;\r\n\t\t\tString amountWithoutDecimal = amountInDecimalString.replace(\".00\", \"\");\r\n\t\t\ttotalAmount = Integer.parseInt(amountWithoutDecimal);\r\n\t\t\ttotalAmount = totalAmount * 100;\r\n\t\t\tfinalAmount = Integer.toString(totalAmount);\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfinalAmount = amountStr;\r\n\t\t}\r\n\r\n\t\t// randomly generates a UUID for merchantOrderReference\r\n\t\tUUID uuid = UUID.randomUUID();\r\n\t\tString merchantOrderReference = uuid.toString();\r\n\t\tint statusCode = 0;\r\n\t\t// Define the URL and JSON payload\r\n\t\tString url = \"https://api-gateway.sandbox.ngenius-payments.com/transactions/outlets/a2c3b529-68c7-44eb-8a2a-3aeb12d83ae6/orders\";// Create\r\n\t\tString cancelUrl = \"http://127.0.0.1:8080/jw/web/userview/ofc_app/v/_/serReqForm_crud1\";\r\n\t\tString redirectUrl = \"http://127.0.0.1:8080/jw/web/userview/ofc_app/v/_/paymentRedirectPage?url=%2Fjw%2Fweb%2Fuserview%2Fofc_app%2Fv%2F_%2FpaymentRedirectPage\";\r\n\t\t// Create order Request\r\n\t\tString jsonPayload = \"{\\\"action\\\":\\\"PURCHASE\\\",\\\"amount\\\":{\\\"currencyCode\\\":\\\"AED\\\",\\\"value\\\":\" + finalAmount\r\n\t\t\t\t+ \"},\\\"merchantOrderReference\\\":\\\"\" + merchantOrderReference\r\n\t\t\t\t+ \"\\\",\\\"merchantAttributes\\\":{\\\"redirectUrl\\\":\\\"\" + redirectUrl\r\n\t\t\t\t+ \"\\\",\\\"skipConfirmationPage\\\":\\\"true\\\",\\\"cancelText\\\":\\\"GoBacktoApplication\\\",\\\"cancelUrl\\\":\\\"\"\r\n\t\t\t\t+ cancelUrl + \"\\\"},\\\"emailAddress\\\":\\\"\" + companyNamOrEmail + \"\\\",\\\"billingAddress\\\":{\\\"firstName\\\":\\\"\"\r\n\t\t\t\t+ companyNameUsername\r\n\t\t\t\t+ \"\\\",\\\"lastName\\\":\\\"Kumar\\\",\\\"address1\\\":\\\"Dubai\\\",\\\"city\\\":\\\"Dubai\\\",\\\"countryCode\\\":\\\"UAE\\\"}}\";\r\n\r\n\t\ttry {\r\n\t\t\t// Create the HttpClient and HttpPost objects\r\n\t\t\tHttpClient httpClient = HttpClients.custom()\r\n\t\t\t\t\t.setDefaultRequestConfig(RequestConfig.custom().setCookieSpec(CookieSpecs.STANDARD).build())\r\n\t\t\t\t\t.build();\r\n\t\t\tHttpPost httpPost = new HttpPost(url);\r\n\r\n\t\t\t// Set the request headers\r\n\t\t\thttpPost.setHeader(\"Authorization\", \"Bearer \" + accessToken);\r\n\t\t\thttpPost.setHeader(\"Content-Type\", \"application/vnd.ni-payment.v2+json\");\r\n\t\t\thttpPost.setHeader(\"Accept\", \"application/vnd.ni-payment.v2+json\");\r\n\r\n\t\t\t// Set the request body\r\n\t\t\tStringEntity requestEntity = new StringEntity(jsonPayload);\r\n\t\t\thttpPost.setEntity(requestEntity);\r\n\r\n\t\t\t// Send the request and receive the response\r\n\t\t\tHttpResponse response = httpClient.execute(httpPost);\r\n\r\n\t\t\t// Set the request body\r\n\t\t\tstatusCode = response.getStatusLine().getStatusCode();\r\n\t\t\tString responseBody = EntityUtils.toString(response.getEntity());\r\n\r\n\t\t\t// Print the response status code and body\r\n\t\t\t//////System.out.println(\"Response Status Code: \" + statusCode);\r\n\t\t\t//////System.out.println(\"Response Body: \" + responseBody);\r\n\r\n\t\t\t// getting the order reference\r\n\t\t\tJSONObject jsonData = new JSONObject(responseBody);\r\n\t\t\tString orderReference = (String) jsonData.get(\"reference\");\r\n\r\n\t\t\t// calling order details save method\r\n\t\t\tsetOrderDetailsInDB(orderReference, merchantOrderReference, accessToken);\r\n\r\n\t\t\t// getting payment link from response\r\n\t\t\tJSONObject links = jsonData.getJSONObject(\"_links\");\r\n\t\t\tJSONObject payment = links.getJSONObject(\"payment\");\r\n\t\t\tString paymentLink = payment.getString(\"href\");\r\n\r\n\t\t\t//////System.out.println(\"paymentLink \" + paymentLink);\r\n\r\n\t\t\t// Execute payment link\r\n\t\t\tjava.awt.Desktop.getDesktop().browse(java.net.URI.create(paymentLink));\r\n\r\n\t\t} catch (Exception e) {\r\n\t\t\tSystem.out.println(\"Response Status Code: \" + statusCode);\r\n\t\t\t\r\n\t\t\ttry {\r\n\t\t\t    String redirectUrl = \"http://localhost:8080/jw/web/userview/ofc_app/v/_/serReqForm_crud1\";\r\n\t\t\t\t\t// Redirect page to service request summary\r\n\t\t\t\t\tjava.awt.Desktop.getDesktop().browse(java.net.URI.create(redirectUrl));\r\n\t\t\t\t} catch (IOException e) {\r\n\t\t\t\t\t// TODO Auto-generated catch block\r\n\t\t\t\t\te.printStackTrace();\r\n\t\t\t\t}\r\n\t\t\t\r\n\t\t\te.printStackTrace();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\r\n// Here we are getting the access token\r\n\tpublic  getAccessToken() {\r\n\r\n\t\tint statusCode = 0;\r\n\t\ttry {\r\n\r\n\t\t\tString url = \"https://api-gateway.sandbox.ngenius-payments.com/identity/auth/access-token\";\r\n\t\t\tString authorization = \"Authorization\";\r\n\t\t\tString authorizationValue = \"Basic OGQwZWZiNTQtMmQ0YS00YmNlLTg5ODMtMTczMGEyZmRkOGU3OjQzNzNhMTFmLTMxYTgtNGE5NC05OWU5LWI4Y2FhYTI0MTJjZQ==\";\r\n\t\t\tString contentType = \"Content-Type\";\r\n\t\t\tString contentTypeValue = \"application/vnd.ni-identity.v1+json\";\r\n\r\n\t\t\t// Create the HttpClient and HttpPost objects and code for remove cookie warring\r\n\t\t\tHttpClient httpClient = HttpClients.custom()\r\n\t\t\t\t\t.setDefaultRequestConfig(RequestConfig.custom().setCookieSpec(CookieSpecs.STANDARD).build())\r\n\t\t\t\t\t.build();\r\n\t\t\tHttpPost httpPost = new HttpPost(url);\r\n\r\n\t\t\t// Set the request headers\r\n\t\t\thttpPost.setHeader(authorization, authorizationValue);\r\n\t\t\thttpPost.setHeader(contentType, contentTypeValue);\r\n\r\n\t\t\t// Send the request and receive the response\r\n\t\t\tHttpResponse response = httpClient.execute(httpPost);\r\n\r\n\t\t\t// Get the response status code and body\r\n\t\t\tstatusCode = response.getStatusLine().getStatusCode();\r\n\t\t\tString responseBody = EntityUtils.toString(response.getEntity());\r\n\r\n\t\t\t// getting the order access token\r\n\t\t\tJSONObject jsonData = new JSONObject(responseBody);\r\n\t\t\tString access_token = (String) jsonData.get(\"access_token\");\r\n           \r\n           // Print the response status code and body\r\n\t\t\t//////System.out.println(\"getAccessToken() Response Status Code: \" + statusCode);\r\n\t\t\t//////System.out.println(\"getAccessToken() Response Body: \" + responseBody);\r\n\t\t\t//////System.out.println(\"getAccessToken() access_token Body: \" + access_token);\r\n\t\t\r\n\t\t\t// method call for create order\r\n\t\t\tcreateOrder(access_token);\r\n\r\n\t\t\t\r\n\r\n\t\t} catch (Exception ex) {\r\n\r\n\t\t\tSystem.out.println(\"getAccessToken() Status code : \" + statusCode);\r\n\t\t\tex.printStackTrace();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\t//method calling\r\n\tgetAccessToken() ;",
                "useAjax": ""
            }
        },
        "tableName": "ofc_serReqs_tab"
    }
}