{
    "className": "org.joget.apps.form.model.Form",
    "elements": [{
        "className": "org.joget.apps.form.model.Section",
        "elements": [{
            "className": "org.joget.apps.form.model.Column",
            "elements": [
                {
                    "className": "org.joget.apps.form.lib.TextField",
                    "properties": {
                        "encryption": "",
                        "id": "fee_fitout_nonCompliance",
                        "label": "Non-Compliance Fee",
                        "maxlength": "",
                        "numOfDecimal": "2",
                        "placeholder": "",
                        "postfix": "",
                        "prefix": "",
                        "readonly": "",
                        "readonlyLabel": "",
                        "size": "",
                        "storeNumeric": "true",
                        "style": "us",
                        "useThousandSeparator": "",
                        "validator": {
                            "className": "org.joget.apps.form.lib.BeanShellValidator",
                            "properties": {
                                "decoration": "",
                                "script": "<script type=\"text/javascript\">\r\n$(function()\r\n{\r\n  if(\"#variable.inspectionstatus#\"==\"Other Non-Compliance\")\r\n  {\r\n    $(\"#fee_fitout_nonCompliance\").val(\"5250\");\r\n  }\r\n});\r\n<\/script>"
                            }
                        },
                        "value": "",
                        "workflowVariable": ""
                    }
                },
                {
                    "className": "org.joget.apps.form.lib.TextField",
                    "properties": {
                        "encryption": "",
                        "id": "wave_off",
                        "label": "Wave off (60% or 40% or 20%)",
                        "maxlength": "",
                        "placeholder": "",
                        "readonly": "",
                        "readonlyLabel": "",
                        "size": "",
                        "storeNumeric": "",
                        "style": "",
                        "validator": {
                            "className": "",
                            "properties": {}
                        },
                        "value": "",
                        "workflowVariable": ""
                    }
                },
                {
                    "className": "org.joget.plugin.enterprise.CalculationField",
                    "properties": {
                        "equation": "(totalfee/100)*wave",
                        "hidden": "",
                        "id": "waver_amount",
                        "label": "Waver_amount",
                        "numOfDecimal": "2",
                        "postfix": "",
                        "prefix": "",
                        "readonlyLabel": "true",
                        "storeNumeric": "",
                        "style": "us",
                        "useThousandSeparator": "",
                        "validator": {
                            "className": "",
                            "properties": {}
                        },
                        "variables": [
                            {
                                "fieldId": "fee_fitout_nonCompliance",
                                "operation": "sum",
                                "variableName": "totalfee"
                            },
                            {
                                "fieldId": "wave_off",
                                "operation": "sum",
                                "variableName": "wave"
                            }
                        ],
                        "workflowVariable": ""
                    }
                },
                {
                    "className": "org.joget.plugin.enterprise.CalculationField",
                    "properties": {
                        "equation": "(totalfees-waver_amount)",
                        "hidden": "",
                        "id": "feetopay",
                        "label": "Fee To-Be Paid",
                        "numOfDecimal": "2",
                        "postfix": "",
                        "prefix": "",
                        "readonlyLabel": "true",
                        "storeNumeric": "",
                        "style": "us",
                        "useThousandSeparator": "",
                        "validator": {
                            "className": "",
                            "properties": {}
                        },
                        "variables": [
                            {
                                "fieldId": "fee_fitout_nonCompliance",
                                "operation": "sum",
                                "variableName": "totalfees"
                            },
                            {
                                "fieldId": "waver_amount",
                                "operation": "sum",
                                "variableName": "waver"
                            }
                        ],
                        "workflowVariable": ""
                    }
                }
            ],
            "properties": {"width": "100%"}
        }],
        "properties": {
            "comment": "",
            "id": "fee",
            "join": "or;or",
            "label": "Wave Off",
            "loadBinder": {
                "className": "org.joget.apps.form.lib.WorkflowFormBinder",
                "properties": {}
            },
            "permission": {
                "className": "",
                "properties": {}
            },
            "permissionReadonly": "",
            "readonly": "",
            "readonlyLabel": "",
            "regex": ";",
            "reverse": ";",
            "storeBinder": {
                "className": "org.joget.apps.form.lib.WorkflowFormBinder",
                "properties": {}
            },
            "visibilityControl": "inspectionreportStatus;inspectionreportStatus",
            "visibilityValue": "Other Non-Compliance;Fitout Non-Compliance"
        }
    }],
    "properties": {
        "description": "",
        "id": "waveoff_insp_fee",
        "loadBinder": {
            "className": "org.joget.apps.form.lib.WorkflowFormBinder",
            "properties": {}
        },
        "name": "Inspection Report - Wave OFF Fee",
        "noPermissionMessage": "",
        "permission": {
            "className": "",
            "properties": {}
        },
        "postProcessor": {
            "className": "org.joget.apps.app.lib.BeanShellTool",
            "properties": {"script": "import java.io.IOException;\r\nimport okhttp3.OkHttpClient;\r\nimport okhttp3.Request;\r\nimport okhttp3.Response;\r\nimport org.joget.apps.form.model.*;\r\nimport org.joget.apps.form.service.*;\r\nimport java.sql.*;\r\nimport java.util.*;\r\nimport org.apache.commons.collections.SequencedHashMap;\r\nimport java.sql.Connection;\r\nimport java.sql.PreparedStatement;\r\nimport java.sql.ResultSet;\r\nimport java.sql.SQLException;\r\nimport javax.sql.DataSource;\r\nimport org.joget.apps.app.model.AppDefinition;\r\nimport org.joget.apps.app.service.AppService;\r\nimport org.joget.apps.app.service.AppUtil;\r\nimport org.joget.apps.form.model.Element;\r\nimport org.joget.apps.form.model.FormData;\r\nimport org.joget.apps.form.model.FormRow;\r\nimport org.joget.apps.form.model.FormRowSet;\r\nimport org.joget.apps.form.model.FormStoreBinder;\r\nimport org.joget.apps.form.service.FormUtil;\r\nimport org.joget.plugin.base.PluginManager;\r\nimport org.joget.commons.util.LogUtil;\r\nimport org.json.JSONArray;\r\nimport org.json.JSONObject;\r\n//here we are update inspectionScheduled in c_status column\r\npublic void updateinspectionScheduled() {\r\n             System.out.println(\"serReqDmccSrNo ------ iD \");\r\n         Connection con = null;\r\n         try{ \r\n             Class.forName(\"com.mysql.jdbc.Driver\").newInstance();\r\n             con = DriverManager.getConnection(\"jdbc:mysql://localhost:3307/jwdb?characterEncoding=UTF-8\", \"root\", \"\");\r\n             if (!con.isClosed()) {\r\n                 String serReqDmccSrNo = \"#form.app_fd_ofc_serreqs_tab.serReqDmccSrNo#\";\r\n                 String id = \"#form.app_fd_ofc_serreqs_tab.id#\";\r\n                System.out.println(\"serReqDmccSrNo ---------\"+serReqDmccSrNo+\" iD \"+id);\r\n                 String inspectionStatus = null;\r\n                 String reportStatus = \"#form.app_fd_ofc_serreqs_tab.inspectionreportStatus#\";\r\n                  System.out.println(\"serReqDmccSrNo ---------\"+reportStatus+\" iD \"+id);\r\n                 //String query = \"INSERT INTO app_fd_ofc_insp_report (id,c_serReqDmccSrNo, c_inspectionStatus) VALUES (?, ?,?)\";\r\n                 \r\n                 if(reportStatus.equals(\"Full Compliance\"))\r\n                 {\r\n                     inspectionStatus = \"Inspection Completed\";\r\n                 }\r\n                 else\r\n                 {\r\n                     inspectionStatus = \"Inspection To-Be Re-Scheduled\";\r\n                 }\r\n                 String query = \"update app_fd_ofc_serreqs_tab set c_status = ? where c_serReqDmccSrNo = ? and id = ?\";\r\n                 \r\n                 PreparedStatement preparedStmt = con.prepareStatement(query);\r\n                 //preparedStmt.setString(1, id);\r\n                 preparedStmt.setString(1, inspectionStatus);\r\n                 preparedStmt.setString(2, serReqDmccSrNo);\r\n                 preparedStmt.setString(3, id);// execute the java preparedstatement\r\n                 preparedStmt.executeUpdate();\r\n                 } else {\r\n                 System.out.println(\"Connection Problem\");\r\n             }\r\n         } catch (Exception ex) {\r\n             ex.printStackTrace(); \r\n             } finally {\r\n             // local url\r\n             try {\r\n                 con.close();\r\n             } catch (SQLException e) {\r\n                 // TODO Auto-generated catch block\r\n                 e.printStackTrace();\r\n             }\r\n             String redirectUrl = \"http://127.0.0.1:8080/jw/web/userview/ofc_app/v/_/ofc_inspection_form_crud\";\r\n             // cloud url\r\n             // String redirectUrl =\r\n             // \"https://concordia.cloud.joget.com/jw/web/userview/ofc_app/v/_/ofc_inspection_form_crud\";\r\n             // Execute payment link\r\n             java.awt.Desktop.getDesktop().browse(java.net.URI.create(redirectUrl));\r\n         }\r\n    }\r\nupdateinspectionScheduled();\r\n"}
        },
        "postProcessorRunOn": "both",
        "storeBinder": {
            "className": "org.joget.apps.form.lib.WorkflowFormBinder",
            "properties": {}
        },
        "tableName": "ofc_serReqs_tab"
    }
}